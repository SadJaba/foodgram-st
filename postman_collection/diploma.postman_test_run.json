{
	"id": "5bdaabad-840c-4349-bc40-b543c4daeab7",
	"name": "diploma",
	"timestamp": "2025-06-13T17:37:26.488Z",
	"collection_id": "34853176-b274ed6d-47d7-4469-ba03-50edf58defa3",
	"folder_id": 0,
	"environment_id": "0",
	"totalPass": 183,
	"delay": 0,
	"persist": true,
	"status": "finished",
	"startedAt": "2025-06-13T17:36:56.364Z",
	"totalFail": 15,
	"results": [
		{
			"id": "b7d5f5aa-4c38-4b9e-a33e-c2846c8147b8",
			"name": "create_first_user",
			"url": "http://localhost/api/users/",
			"time": 2345,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2345
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "92b77100-5a53-48a3-83fb-61ab8035bb29",
			"name": "create_second_user",
			"url": "http://localhost/api/users/",
			"time": 841,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				841
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "01fe1d3a-d617-4bc2-ab19-bf31addb2b05",
			"name": "create_third_user",
			"url": "http://localhost/api/users/",
			"time": 753,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				753
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "33b7baee-369b-4bf0-b152-ed1a2115d6d0",
			"name": "get_token_for_first_user",
			"url": "http://localhost/api/auth/token/login/",
			"time": 780,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				780
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "eabe1184-1201-4e15-ac36-e8eccd649313",
			"name": "get_token_for_second_user",
			"url": "http://localhost/api/auth/token/login/",
			"time": 792,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				792
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "b0a27ad1-102a-46b7-a661-3a16ee912ae1",
			"name": "user_registration_without_email",
			"url": "http://localhost/api/users/",
			"time": 161,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				161
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c3335fad-fabe-4636-99e3-4d7253b8b590",
			"name": "user_registration_without_username",
			"url": "http://localhost/api/users/",
			"time": 53,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				53
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "33a9f851-9e13-41fc-b8b7-59a58abbfbfd",
			"name": "user_registration_without_first_name",
			"url": "http://localhost/api/users/",
			"time": 59,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				59
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "ae96411d-0384-4ef0-939b-9bd8ce5281db",
			"name": "user_registration_without_last_name",
			"url": "http://localhost/api/users/",
			"time": 67,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				67
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c3cf444d-3971-4bab-ba62-4741d560e8a0",
			"name": "user_registration_without_password",
			"url": "http://localhost/api/users/",
			"time": 76,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				76
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "f73a0d3d-22a1-4f1c-b36f-7f9447c06b1a",
			"name": "user_registration_too_long_email",
			"url": "http://localhost/api/users/",
			"time": 34,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				34
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "5b8ee677-a006-4ed3-ba86-28176b3c424c",
			"name": "user_registration_too_long_username",
			"url": "http://localhost/api/users/",
			"time": 33,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				33
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "86f610c6-7fa2-4c45-a4ab-ae2d8ba6b082",
			"name": "user_registration_too_long_first_name",
			"url": "http://localhost/api/users/",
			"time": 37,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				37
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "014f02e0-073c-4436-a670-8665d9e72089",
			"name": "user_registration_too_long_last_name",
			"url": "http://localhost/api/users/",
			"time": 65,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				65
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "89872f5e-fcb3-40d8-a186-8ef1d57eea0b",
			"name": "user_registration_with_invalid_username",
			"url": "http://localhost/api/users/",
			"time": 55,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				55
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "b36b7de5-05da-4d6f-83f1-76e6edeb9f3b",
			"name": "user_registration_email_in_use",
			"url": "http://localhost/api/users/",
			"time": 243,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				243
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "bfc876b3-bf24-400e-af55-90d66d8c7418",
			"name": "user_registration_username_in_use",
			"url": "http://localhost/api/users/",
			"time": 52,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				52
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "b37bf4ac-86e5-4421-a2bf-cf26f5c92afa",
			"name": "get_token_username_and_email_mismatch",
			"url": "http://localhost/api/auth/token/login/",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c5ead754-97ae-4a15-8562-81628a9d99fb",
			"name": "get_token_no_email",
			"url": "http://localhost/api/auth/token/login/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c2656d18-2b21-4c10-8326-6047e79e336e",
			"name": "get_token_no_password",
			"url": "http://localhost/api/auth/token/login/",
			"time": 19,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "1788080a-5ab5-4085-8a03-2da1e30eebab",
			"name": "logout // User",
			"url": "http://localhost/api/auth/token/logout/",
			"time": 73,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				73
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "153f9310-8f1f-4de5-a3dc-922eb6a78f19",
			"name": "get_token",
			"url": "http://localhost/api/auth/token/login/",
			"time": 542,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				542
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "4b920aa7-0c02-4108-ac2a-2e5cc5b2abeb",
			"name": "get_user_list // No Auth",
			"url": "http://localhost/api/users/",
			"time": 159,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				159
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "f1f3a14e-4dc3-466d-b1d5-3b39f4d81e64",
			"name": "get_user_list// User",
			"url": "http://localhost/api/users/",
			"time": 78,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				78
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "afbfb548-893e-4872-a21f-c8db2549082a",
			"name": "get_user_list_with_limit_param // User",
			"url": "http://localhost/api/users/?limit=1",
			"time": 74,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				74
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": true
				}
			]
		},
		{
			"id": "d6125f2a-1eae-40d0-ac66-1756afb21d36",
			"name": "get_profile // No Auth",
			"url": "http://localhost/api/users/1/",
			"time": 31,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				31
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "1d49f5d0-ff4a-4838-82d0-01c73651ba5f",
			"name": "get_profile // User",
			"url": "http://localhost/api/users/1/",
			"time": 58,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				58
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "20149072-d73b-4943-9da0-0299a527c8c4",
			"name": "users_me // User",
			"url": "http://localhost/api/users/me/",
			"time": 39,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Поле `is_subscribed` в ответе должно иметь значение `false`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Поле `is_subscribed` в ответе должно иметь значение `false`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				39
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Поле `is_subscribed` в ответе должно иметь значение `false`": true
				}
			]
		},
		{
			"id": "b3625a7d-9ef6-442e-90e6-10f5f1dd7040",
			"name": "set_avatar // User",
			"url": "http://localhost/api/users/me/avatar/",
			"time": 462,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				462
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "0cce5fa9-5dc2-46f1-8027-cf6e1d24ca1b",
			"name": "check_avatar_is_set // User",
			"url": "http://localhost/api/users/me/",
			"time": 152,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Поле `avatar` должно содержать ссылку на аватар": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Поле `avatar` должно содержать ссылку на аватар": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				152
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Поле `avatar` должно содержать ссылку на аватар": true
				}
			]
		},
		{
			"id": "75944cb6-f0df-4b0c-9657-4e275463e685",
			"name": "reset_password // User",
			"url": "http://localhost/api/users/set_password/",
			"time": 1013,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				1013
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "f559305a-5a63-4dfb-892e-e07c619d7bef",
			"name": "get_token_with_new_password",
			"url": "http://localhost/api/auth/token/login/",
			"time": 810,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				810
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "bc723425-a5fe-4c65-8068-00e5e1d7963a",
			"name": "roll_back_password // User",
			"url": "http://localhost/api/users/set_password/",
			"time": 1271,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				1271
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "2059c316-4f24-4d4d-9fea-1dc8d12bc7d7",
			"name": "get_token_for_first_user",
			"url": "http://localhost/api/auth/token/login/",
			"time": 949,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				949
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "44e93c6f-89be-4660-bf9f-786f8645e163",
			"name": "users_me // No Auth",
			"url": "http://localhost/api/users/me/",
			"time": 85,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				85
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "b8673b2b-e1eb-48cc-88c5-65018d066d84",
			"name": "get_non_existing_profile // User",
			"url": "http://localhost/api/users/9876/",
			"time": 154,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				154
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "c733e355-5aca-4d99-9441-ba1bae67636e",
			"name": "reset_password_wrong_password // User",
			"url": "http://localhost/api/users/set_password/",
			"time": 630,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				630
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c199ea8e-44af-4f4d-9068-f507af9fa0e1",
			"name": "delete_avatar // No Auth",
			"url": "http://localhost/api/users/me/avatar/",
			"time": 57,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				57
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "3d3dc1cb-539c-430c-a753-959fe04f91e2",
			"name": "set_avatar // No Auth",
			"url": "http://localhost/api/users/me/avatar/",
			"time": 25,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				25
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "9b0d36b1-6a3b-489f-817c-c8c78a75cc40",
			"name": "set_avatar_empty_body // User",
			"url": "http://localhost/api/users/me/avatar/",
			"time": 158,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				158
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "fe66f5d8-d487-4bc8-9884-1223d98c3dc1",
			"name": "delete_avatar // User",
			"url": "http://localhost/api/users/me/avatar/",
			"time": 122,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				122
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "f376c233-a99a-4e7f-b2d9-f0dc87f8e49b",
			"name": "check_avatar_is_deleted // User",
			"url": "http://localhost/api/users/me/",
			"time": 76,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Поле `avatar` должно быть пустым": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Поле `avatar` должно быть пустым": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				76
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Поле `avatar` должно быть пустым": true
				}
			]
		},
		{
			"id": "b6c4d345-1a8a-4162-b1f3-cac48ffab60f",
			"name": "get_ingredients_list // No Auth",
			"url": "http://localhost/api/ingredients/",
			"time": 420,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				420
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "a7a18417-ae5d-4f8a-98f6-d1ff058fc6f7",
			"name": "get_ingredients_list // User",
			"url": "http://localhost/api/ingredients/",
			"time": 506,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				506
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "82e6b9c3-502f-4bfe-932d-a906041afbf4",
			"name": "get_ingredients_list_with_name_filter // User",
			"url": "http://localhost/api/ingredients/?name=Б",
			"time": 914,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				914
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Ответ должен содержать данные, удовлетворяющие условиям поиска": false
				}
			]
		},
		{
			"id": "7ffb60da-860d-47dd-8370-5b0ca9bec523",
			"name": "get_ingredient // No Auth",
			"url": "http://localhost/api/ingredients/170/",
			"time": 190,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				190
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "28235ab6-5086-499c-9bc8-693d8b9d2378",
			"name": "get_ingredient // User",
			"url": "http://localhost/api/ingredients/170/",
			"time": 59,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				59
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "bd7a9ee0-b98c-4741-a7d0-06162306d405",
			"name": "get_non_existing_ingredient // User",
			"url": "http://localhost/api/ingredients/9876/",
			"time": 63,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				63
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "730a96bd-c1cf-4c13-831c-fd9803428059",
			"name": "create_ingredient // User",
			"url": "http://localhost/api/ingredients/",
			"time": 42,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				42
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "bd6e05ea-ec19-436a-86a6-ca755f4cf4ff",
			"name": "put_ingredient // User",
			"url": "http://localhost/api/ingredients/170/",
			"time": 36,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				36
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "3ab57778-891b-40f3-9948-df5e16f90e19",
			"name": "patch_ingredient // User",
			"url": "http://localhost/api/ingredients/170/",
			"time": 41,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				41
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "318abad8-0a00-4728-b848-daa6fdaa14a5",
			"name": "delete_ingredient // User",
			"url": "http://localhost/api/ingredients/170/",
			"time": 36,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				36
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "d8c4432c-aeda-4838-9242-5d2fd5c1f414",
			"name": "create_first_recipe // Second User",
			"url": "http://localhost/api/recipes/",
			"time": 161,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответстовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				161
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответстовать ожидаемой": true
				}
			]
		},
		{
			"id": "db210dab-48b0-45e1-b20d-471eca77869c",
			"name": "create_second_recipe // Second User",
			"url": "http://localhost/api/recipes/",
			"time": 103,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответстовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				103
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответстовать ожидаемой": true
				}
			]
		},
		{
			"id": "8d4c4064-6d71-4f15-ba43-f21f5576a3b8",
			"name": "create_third_recipe // Second User",
			"url": "http://localhost/api/recipes/",
			"time": 135,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответстовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				135
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответстовать ожидаемой": true
				}
			]
		},
		{
			"id": "fbe3c892-7f4e-4d3a-b758-7130ad97de52",
			"name": "create_fourth_recipe // Second User",
			"url": "http://localhost/api/recipes/",
			"time": 67,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответстовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				67
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответстовать ожидаемой": true
				}
			]
		},
		{
			"id": "c6aaa324-29bf-496b-aeba-2f20d35dc637",
			"name": "create_fifth_recipe // User",
			"url": "http://localhost/api/recipes/",
			"time": 93,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответстовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				93
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответстовать ожидаемой": true
				}
			]
		},
		{
			"id": "154f0953-952f-4e6d-93bf-10692d073437",
			"name": "get_recipes_list // No Auth",
			"url": "http://localhost/api/recipes/",
			"time": 305,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				305
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "2188eb38-20aa-4a58-a558-0dbbaa5a4388",
			"name": "get_recipes_list // User",
			"url": "http://localhost/api/recipes/",
			"time": 197,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				197
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "19e505b8-b8dd-43db-8739-2fbc35acf371",
			"name": "get_recipes_list_with_limit_param // User",
			"url": "http://localhost/api/recipes/?limit=2",
			"time": 158,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность изменить количество объектов на странице через параметр `limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность изменить количество объектов на странице через параметр `limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				158
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность изменить количество объектов на странице через параметр `limit`": true
				}
			]
		},
		{
			"id": "e171b885-c6c4-495b-881a-da34cae94fd5",
			"name": "get_recipes_list_with_author_param // User",
			"url": "http://localhost/api/recipes/?author=1",
			"time": 131,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтрации рецептов через параметр запроса `author`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтрации рецептов через параметр запроса `author`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				131
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтрации рецептов через параметр запроса `author`": false
				}
			]
		},
		{
			"id": "aaa32120-9733-4e03-9302-bebf23a982d1",
			"name": "get_recipe_detail // No Auth",
			"url": "http://localhost/api/recipes/1/",
			"time": 133,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				133
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "ee50cdd5-4434-473c-a567-a81e54f93de0",
			"name": "get_recipe_detail // User",
			"url": "http://localhost/api/recipes/1/",
			"time": 102,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				102
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "a0479849-ef93-42b1-8b2b-2e137e8c6c8d",
			"name": "get_recipe_short_link // User",
			"url": "http://localhost/api/recipes/1/get-link/",
			"time": 55,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				55
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "7ab2f1cd-8995-4a3d-a571-9db8b01146bf",
			"name": "get_recipe_short_link // No Auth",
			"url": "http://localhost/api/recipes/1/get-link/",
			"time": 36,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				36
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "97c2d0a9-1694-4919-b1e5-cdcd23978cf8",
			"name": "update_recipe // Second User",
			"url": "http://localhost/api/recipes/1/",
			"time": 141,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				141
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "fef0d388-48c4-4712-8c60-a70e52eb16db",
			"name": "create_recipe_without_ingredients // User",
			"url": "http://localhost/api/recipes/",
			"time": 49,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				49
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "a18a614c-cc27-4781-9d31-051d1f13cfb3",
			"name": "create_recipe_empty_ingredients_fields // User",
			"url": "http://localhost/api/recipes/",
			"time": 24,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				24
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "71f25df5-8ea5-4362-9c2b-87465ef373a4",
			"name": "create_recipe_with_non_existing_ingredient // User",
			"url": "http://localhost/api/recipes/",
			"time": 45,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				45
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "70c6fb98-1da7-491b-82ba-beeb308cf3a2",
			"name": "create_recipe_with_ingredient_amount_less_than_one // User",
			"url": "http://localhost/api/recipes/",
			"time": 47,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				47
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "9cee4f24-7430-422e-ae9b-de59f29bf0a4",
			"name": "create_recipe_with_repetitive_ingredients // User",
			"url": "http://localhost/api/recipes/",
			"time": 53,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				53
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "a947aa98-bbce-412c-ac02-1f8bd35a1113",
			"name": "create_recipe_without_image_field // User",
			"url": "http://localhost/api/recipes/",
			"time": 69,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				69
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "6559a39a-5cbe-421b-a29a-bad7d852a0ff",
			"name": "create_recipe_empty_image // User",
			"url": "http://localhost/api/recipes/",
			"time": 114,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				114
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "b5c13093-88db-4abc-a4e7-b5ec7fb9da05",
			"name": "create_recipe_without_name_field // User",
			"url": "http://localhost/api/recipes/",
			"time": 139,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				139
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "09947076-288f-4f40-a883-be84abec9394",
			"name": "create_recipe_empty_name // User",
			"url": "http://localhost/api/recipes/",
			"time": 117,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				117
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "d5714c58-1fcb-4e7e-80f2-e7833d96a066",
			"name": "create_recipe_too_long_name // User",
			"url": "http://localhost/api/recipes/",
			"time": 221,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				221
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "e58f8519-1d30-422f-83e7-e27458e0c49d",
			"name": "create_recipe_without_text_field // User",
			"url": "http://localhost/api/recipes/",
			"time": 346,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				346
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "8797972e-7629-4941-9cf2-a04d2178780b",
			"name": "create_recipe_empty_text // User",
			"url": "http://localhost/api/recipes/",
			"time": 115,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				115
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "1e92ba16-a379-427b-9dc9-c9c58ab9ea96",
			"name": "create_recipe_without_cooking_time_field // User",
			"url": "http://localhost/api/recipes/",
			"time": 75,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				75
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "d60df551-b3f0-4b6a-a635-a8ed587758b1",
			"name": "create_recipe_empty_string_as_cooking_time // User",
			"url": "http://localhost/api/recipes/",
			"time": 51,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				51
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "5c153529-3c40-4182-ae30-a682d9b26a50",
			"name": "create_recipe_cooking_time_less_than_one // User",
			"url": "http://localhost/api/recipes/",
			"time": 68,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				68
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "6a5cbe88-c382-45ce-919c-75df943aa077",
			"name": "create_recipe // No Auth",
			"url": "http://localhost/api/recipes/",
			"time": 11,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "27b5e98a-85d7-4340-a376-b5f06389351b",
			"name": "update_recipe_not_author // User",
			"url": "http://localhost/api/recipes/2/",
			"time": 52,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				52
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "6c4b039e-590f-401c-9eae-73d41dd83fc6",
			"name": "update_recipe // No Auth",
			"url": "http://localhost/api/recipes/2/",
			"time": 21,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				21
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "2ad517ed-4710-46fa-829a-c2fb71b84208",
			"name": "update_recipe_without_ingredients_field // Second User",
			"url": "http://localhost/api/recipes/2/",
			"time": 197,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				197
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "0482ebbd-2499-47fb-8f3c-511edaf45119",
			"name": "update_recipe_empty_ingredients // Second User",
			"url": "http://localhost/api/recipes/2/",
			"time": 68,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				68
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "725a0ec0-22f0-4a59-91c3-c811362970d3",
			"name": "update_recipe_with_non_existing_ingredient // Second User",
			"url": "http://localhost/api/recipes/2/",
			"time": 63,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				63
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "819d59fe-817f-42d6-bf27-a51645b48114",
			"name": "update_recipe_with_ingredient_amount_less_than_one // Second User",
			"url": "http://localhost/api/recipes/2/",
			"time": 52,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				52
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "49caee51-f5df-41d8-ad64-297f9bef722a",
			"name": "update_recipe_with_repetitive_ingredients // Second User",
			"url": "http://localhost/api/recipes/2/",
			"time": 64,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				64
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "f721a060-f9c3-4833-8f79-8592c6d02945",
			"name": "update_recipe_empty_image  // Second User",
			"url": "http://localhost/api/recipes/2/",
			"time": 87,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				87
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "c1cce45d-b1c3-44c7-9758-2aeb5b98e476",
			"name": "update_recipe_empty_name  // Second User",
			"url": "http://localhost/api/recipes/2/",
			"time": 54,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				54
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "75c31062-431d-46b3-8a48-8a88ea257338",
			"name": "update_recipe_too_long_name  // Second User",
			"url": "http://localhost/api/recipes/2/",
			"time": 42,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				42
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "4d12fc29-57c3-4821-a6ca-75c59d641f34",
			"name": "update_recipe_empty_text  // Second User",
			"url": "http://localhost/api/recipes/2/",
			"time": 42,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				42
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "62aa3890-1664-4180-aa9d-fd3202eb995d",
			"name": "update_recipe_empty_string_as_cooking_time  // Second User",
			"url": "http://localhost/api/recipes/2/",
			"time": 77,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				77
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "18fb31db-fb0b-40df-9141-04cc9ac4fe7c",
			"name": "update_recipe_empty_cooking_time_less_than_one  // Second User",
			"url": "http://localhost/api/recipes/2/",
			"time": 103,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				103
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "0df1bc9a-8b48-4ee7-ac72-c0e3de153496",
			"name": "update_none_existing_recipe // Second User",
			"url": "http://localhost/api/recipes/9876/",
			"time": 30,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				30
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "6caa6582-f2a3-4d1f-a289-f78748fdc724",
			"name": "create_subscription // User",
			"url": "http://localhost/api/users/3/subscribe/",
			"time": 57,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				57
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "b11b6cf4-cd82-4309-ac80-cc3d95d89c86",
			"name": "create_subscription_with_recipes_limit_param // User",
			"url": "http://localhost/api/users/2/subscribe/?recipes_limit=2",
			"time": 96,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				96
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": true
				}
			]
		},
		{
			"id": "2eae08ab-d30d-45e5-a52e-f750389016cb",
			"name": "get_subscription_list // User",
			"url": "http://localhost/api/users/subscriptions/",
			"time": 47,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				47
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "9dc45314-ea7e-4947-afb3-f7e982d8c081",
			"name": "get_subscription_list_with_limit_param // User",
			"url": "http://localhost/api/users/subscriptions/?limit=1",
			"time": 162,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				162
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": true
				}
			]
		},
		{
			"id": "21c44f38-1df0-4f44-909f-2aaee26d8338",
			"name": "get_subscription_list_with_recipes_limit_param // User",
			"url": "http://localhost/api/users/subscriptions/?recipes_limit=2",
			"time": 136,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				136
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": true
				}
			]
		},
		{
			"id": "41aa96c5-f609-4384-9698-49d106fa0bfc",
			"name": "create_subscription // No Auth",
			"url": "http://localhost/api/users/3/subscribe/",
			"time": 17,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "281d537b-6ad2-4363-baa3-368c7de62efa",
			"name": "create_duplicated_subscription // User",
			"url": "http://localhost/api/users/3/subscribe/",
			"time": 76,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				76
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "116f137c-2a79-49dd-92be-d31f488a615c",
			"name": "create_self_subscription // User",
			"url": "http://localhost/api/users/1/subscribe/",
			"time": 30,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				30
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "2317539c-9f66-47f2-b1cb-e7cccf9495ad",
			"name": "create_subscription_to_non_existing_author // User",
			"url": "http://localhost/api/users/9876/subscribe/",
			"time": 24,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				24
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "6ed8a6bc-6779-4118-93a1-c0550e487d33",
			"name": "add_to_shopping_cart // User",
			"url": "http://localhost/api/recipes/1/shopping_cart/",
			"time": 80,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				80
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "6b9a9a79-2ff2-426e-b6a9-1029b577e4dd",
			"name": "download_shopping_cart // User",
			"url": "http://localhost/api/recipes/download_shopping_cart/",
			"time": 268,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				268
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true
				}
			]
		},
		{
			"id": "cbecb56a-f123-4106-bf36-290633f944d2",
			"name": "add_to_shopping_cart // No Auth",
			"url": "http://localhost/api/recipes/1/shopping_cart/",
			"time": 17,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "cf138214-2100-42eb-8167-9cd00f376f33",
			"name": "add_again_to_shopping_cart // User",
			"url": "http://localhost/api/recipes/1/shopping_cart/",
			"time": 147,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				147
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "bde99a5f-8e0e-47ce-b170-41409cefb995",
			"name": "add_non_existing_recipe_to_shopping_cart // User",
			"url": "http://localhost/api/recipes/9876/shopping_cart/",
			"time": 65,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				65
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "8b4a282b-28e1-4095-8c92-bf9d8382262f",
			"name": "add_to_favorite // User",
			"url": "http://localhost/api/recipes/1/favorite/",
			"time": 50,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				50
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "c29ab72c-e74a-4560-b82c-659348f110b3",
			"name": "add_to_favorite // No Auth",
			"url": "http://localhost/api/recipes/1/favorite/",
			"time": 16,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				16
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "e066bfd1-dcb6-4ddb-972f-a081a449a809",
			"name": "add_again_to_favorite // User",
			"url": "http://localhost/api/recipes/1/favorite/",
			"time": 76,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				76
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "fb9c3a60-ac94-4f59-8c72-82a32ecd2e64",
			"name": "add_non_existing_recipe_to_favorite // User",
			"url": "http://localhost/api/recipes/9876/favorite/",
			"time": 22,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				22
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "0b08167c-05e9-4e09-a642-6fda9eb685cd",
			"name": "get_recipes_list_with_is_in_shopping_cart_param // User",
			"url": "http://localhost/api/recipes/?is_in_shopping_cart=1",
			"time": 141,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				141
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": false
				}
			]
		},
		{
			"id": "d8870800-32af-411d-a061-bf9456863261",
			"name": "get_recipes_list_with_is_in_shopping_cart_param // No Auth",
			"url": "http://localhost/api/recipes/?is_in_shopping_cart=1",
			"time": 110,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				110
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "8284170f-d78a-4682-a989-a5b6111eb91d",
			"name": "get_recipes_list_with_is_favorited_param // User",
			"url": "http://localhost/api/recipes/?is_favorited=1",
			"time": 227,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				227
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": false
				}
			]
		},
		{
			"id": "af31ceab-0d0d-4da2-87cc-57d39be0beb1",
			"name": "get_recipes_list_with_is_favorited_param // No Auth",
			"url": "http://localhost/api/recipes/?is_favorited=1",
			"time": 170,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				170
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "ae2d6a6b-9bd2-40e2-bcc5-1e70fae106eb",
			"name": "delete_subscription // No Auth",
			"url": "http://localhost/api/users/3/subscribe/",
			"time": 33,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				33
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "b60b4f33-9b82-43c1-b0b6-7452dca10e66",
			"name": "delete_non_existing_subscription // Second User",
			"url": "http://localhost/api/users/3/subscribe/",
			"time": 100,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				100
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "42f73507-bc7c-49cf-8663-ecd33ec97bb5",
			"name": "delete_subscription_with_non_existing_author_in_url // Second User",
			"url": "http://localhost/api/users/9876/subscribe/",
			"time": 64,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				64
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "a26341e0-e1e4-43ee-9300-ebc5209a90bf",
			"name": "delete_first_subscription // User",
			"url": "http://localhost/api/users/3/subscribe/",
			"time": 185,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				185
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "044ccdb4-690e-4f6f-b10d-e2ebe7148891",
			"name": "delete_second_subscription // User",
			"url": "http://localhost/api/users/2/subscribe/",
			"time": 81,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				81
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "c180d413-8237-46a0-914b-caf2ff037f7f",
			"name": "remove_from_shopping_cart // No Auth",
			"url": "http://localhost/api/recipes/1/shopping_cart/",
			"time": 23,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				23
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "b2de765c-4ee9-4912-b539-c633ba129394",
			"name": "remove_not_added_from_shopping_cart // Second User",
			"url": "http://localhost/api/recipes/1/shopping_cart/",
			"time": 105,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				105
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "2b827b5f-d1d6-42a8-8336-116f2d81c992",
			"name": "remove_non_existing_recipe_from_shopping_cart // Second User",
			"url": "http://localhost/api/recipes/9876/shopping_cart/",
			"time": 25,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				25
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "6ca571fb-a490-4d62-8681-50a223e851e5",
			"name": "remove_from_shopping_cart // User",
			"url": "http://localhost/api/recipes/1/shopping_cart/",
			"time": 46,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				46
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "27ccef4b-6928-47c0-bfb2-ff8d1f3c567f",
			"name": "remove_from_favorite // No Auth",
			"url": "http://localhost/api/recipes/1/favorite/",
			"time": 19,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "5f30bce5-d531-4a2c-acee-92d929ad9244",
			"name": "remove_not_added_from_favorite // Second User",
			"url": "http://localhost/api/recipes/1/favorite/",
			"time": 69,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				69
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "820c1144-2b14-43f2-8184-ce66d9b5844d",
			"name": "remove_non_existing_recipe_from_favorite // Second User",
			"url": "http://localhost/api/recipes/9876/favorite/",
			"time": 33,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				33
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "40608d8d-6115-46f6-a5ad-7c3ec2919f76",
			"name": "remove_from_favorite // User",
			"url": "http://localhost/api/recipes/1/favorite/",
			"time": 43,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				43
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "c3f9cb9b-02c3-4e69-b00e-349188a0ce8c",
			"name": "delete_recipe // No Auth",
			"url": "http://localhost/api/recipes/5/",
			"time": 8,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "00518832-d932-47b6-8aac-4578678efb59",
			"name": "delete_recipe_not_by_author // Second User",
			"url": "http://localhost/api/recipes/5/",
			"time": 54,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 403": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				54
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": true
				}
			]
		},
		{
			"id": "7ecfb147-8103-4bdd-a01c-bf9de2203e25",
			"name": "delete_non_existing_recipe // Second User",
			"url": "http://localhost/api/recipes/9876/",
			"time": 36,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				36
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "e3bd3cd9-37fd-4e04-8786-07fe2c770f91",
			"name": "delete_first_recipe // Second User",
			"url": "http://localhost/api/recipes/1/",
			"time": 64,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				64
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "e19b348a-d5af-40ec-9ec8-c7e6456b1904",
			"name": "delete_second_recipe // Second User",
			"url": "http://localhost/api/recipes/2/",
			"time": 63,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				63
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "ac174643-aa39-475c-890d-d7ef765cea6a",
			"name": "delete_third_recipe // Second User",
			"url": "http://localhost/api/recipes/3/",
			"time": 59,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				59
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "88896a87-1b59-4c11-8b9f-a57d61ab3234",
			"name": "delete_fourth_recipe // Second User",
			"url": "http://localhost/api/recipes/4/",
			"time": 68,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				68
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "412920c9-9e48-42fc-a289-26b25ddc82c7",
			"name": "delete_fifth_recipe // Second User",
			"url": "http://localhost/api/recipes/5/",
			"time": 83,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				83
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		}
	],
	"count": 1,
	"totalTime": 23416,
	"collection": {
		"requests": [
			{
				"id": "b7d5f5aa-4c38-4b9e-a33e-c2846c8147b8",
				"method": "POST"
			},
			{
				"id": "92b77100-5a53-48a3-83fb-61ab8035bb29",
				"method": "POST"
			},
			{
				"id": "01fe1d3a-d617-4bc2-ab19-bf31addb2b05",
				"method": "POST"
			},
			{
				"id": "33b7baee-369b-4bf0-b152-ed1a2115d6d0",
				"method": "POST"
			},
			{
				"id": "eabe1184-1201-4e15-ac36-e8eccd649313",
				"method": "POST"
			},
			{
				"id": "b0a27ad1-102a-46b7-a661-3a16ee912ae1",
				"method": "POST"
			},
			{
				"id": "c3335fad-fabe-4636-99e3-4d7253b8b590",
				"method": "POST"
			},
			{
				"id": "33a9f851-9e13-41fc-b8b7-59a58abbfbfd",
				"method": "POST"
			},
			{
				"id": "ae96411d-0384-4ef0-939b-9bd8ce5281db",
				"method": "POST"
			},
			{
				"id": "c3cf444d-3971-4bab-ba62-4741d560e8a0",
				"method": "POST"
			},
			{
				"id": "f73a0d3d-22a1-4f1c-b36f-7f9447c06b1a",
				"method": "POST"
			},
			{
				"id": "5b8ee677-a006-4ed3-ba86-28176b3c424c",
				"method": "POST"
			},
			{
				"id": "86f610c6-7fa2-4c45-a4ab-ae2d8ba6b082",
				"method": "POST"
			},
			{
				"id": "014f02e0-073c-4436-a670-8665d9e72089",
				"method": "POST"
			},
			{
				"id": "89872f5e-fcb3-40d8-a186-8ef1d57eea0b",
				"method": "POST"
			},
			{
				"id": "b36b7de5-05da-4d6f-83f1-76e6edeb9f3b",
				"method": "POST"
			},
			{
				"id": "bfc876b3-bf24-400e-af55-90d66d8c7418",
				"method": "POST"
			},
			{
				"id": "b37bf4ac-86e5-4421-a2bf-cf26f5c92afa",
				"method": "POST"
			},
			{
				"id": "c5ead754-97ae-4a15-8562-81628a9d99fb",
				"method": "POST"
			},
			{
				"id": "c2656d18-2b21-4c10-8326-6047e79e336e",
				"method": "POST"
			},
			{
				"id": "1788080a-5ab5-4085-8a03-2da1e30eebab",
				"method": "POST"
			},
			{
				"id": "153f9310-8f1f-4de5-a3dc-922eb6a78f19",
				"method": "POST"
			},
			{
				"id": "4b920aa7-0c02-4108-ac2a-2e5cc5b2abeb",
				"method": "GET"
			},
			{
				"id": "f1f3a14e-4dc3-466d-b1d5-3b39f4d81e64",
				"method": "GET"
			},
			{
				"id": "afbfb548-893e-4872-a21f-c8db2549082a",
				"method": "GET"
			},
			{
				"id": "d6125f2a-1eae-40d0-ac66-1756afb21d36",
				"method": "GET"
			},
			{
				"id": "1d49f5d0-ff4a-4838-82d0-01c73651ba5f",
				"method": "GET"
			},
			{
				"id": "20149072-d73b-4943-9da0-0299a527c8c4",
				"method": "GET"
			},
			{
				"id": "b3625a7d-9ef6-442e-90e6-10f5f1dd7040",
				"method": "PUT"
			},
			{
				"id": "0cce5fa9-5dc2-46f1-8027-cf6e1d24ca1b",
				"method": "GET"
			},
			{
				"id": "75944cb6-f0df-4b0c-9657-4e275463e685",
				"method": "POST"
			},
			{
				"id": "f559305a-5a63-4dfb-892e-e07c619d7bef",
				"method": "POST"
			},
			{
				"id": "bc723425-a5fe-4c65-8068-00e5e1d7963a",
				"method": "POST"
			},
			{
				"id": "2059c316-4f24-4d4d-9fea-1dc8d12bc7d7",
				"method": "POST"
			},
			{
				"id": "44e93c6f-89be-4660-bf9f-786f8645e163",
				"method": "GET"
			},
			{
				"id": "b8673b2b-e1eb-48cc-88c5-65018d066d84",
				"method": "GET"
			},
			{
				"id": "c733e355-5aca-4d99-9441-ba1bae67636e",
				"method": "POST"
			},
			{
				"id": "c199ea8e-44af-4f4d-9068-f507af9fa0e1",
				"method": "DELETE"
			},
			{
				"id": "3d3dc1cb-539c-430c-a753-959fe04f91e2",
				"method": "PUT"
			},
			{
				"id": "9b0d36b1-6a3b-489f-817c-c8c78a75cc40",
				"method": "PUT"
			},
			{
				"id": "fe66f5d8-d487-4bc8-9884-1223d98c3dc1",
				"method": "DELETE"
			},
			{
				"id": "f376c233-a99a-4e7f-b2d9-f0dc87f8e49b",
				"method": "GET"
			},
			{
				"id": "b6c4d345-1a8a-4162-b1f3-cac48ffab60f",
				"method": "GET"
			},
			{
				"id": "a7a18417-ae5d-4f8a-98f6-d1ff058fc6f7",
				"method": "GET"
			},
			{
				"id": "82e6b9c3-502f-4bfe-932d-a906041afbf4",
				"method": "GET"
			},
			{
				"id": "7ffb60da-860d-47dd-8370-5b0ca9bec523",
				"method": "GET"
			},
			{
				"id": "28235ab6-5086-499c-9bc8-693d8b9d2378",
				"method": "GET"
			},
			{
				"id": "bd7a9ee0-b98c-4741-a7d0-06162306d405",
				"method": "GET"
			},
			{
				"id": "730a96bd-c1cf-4c13-831c-fd9803428059",
				"method": "POST"
			},
			{
				"id": "bd6e05ea-ec19-436a-86a6-ca755f4cf4ff",
				"method": "PUT"
			},
			{
				"id": "3ab57778-891b-40f3-9948-df5e16f90e19",
				"method": "PATCH"
			},
			{
				"id": "318abad8-0a00-4728-b848-daa6fdaa14a5",
				"method": "DELETE"
			},
			{
				"id": "d8c4432c-aeda-4838-9242-5d2fd5c1f414",
				"method": "POST"
			},
			{
				"id": "db210dab-48b0-45e1-b20d-471eca77869c",
				"method": "POST"
			},
			{
				"id": "8d4c4064-6d71-4f15-ba43-f21f5576a3b8",
				"method": "POST"
			},
			{
				"id": "fbe3c892-7f4e-4d3a-b758-7130ad97de52",
				"method": "POST"
			},
			{
				"id": "c6aaa324-29bf-496b-aeba-2f20d35dc637",
				"method": "POST"
			},
			{
				"id": "154f0953-952f-4e6d-93bf-10692d073437",
				"method": "GET"
			},
			{
				"id": "2188eb38-20aa-4a58-a558-0dbbaa5a4388",
				"method": "GET"
			},
			{
				"id": "19e505b8-b8dd-43db-8739-2fbc35acf371",
				"method": "GET"
			},
			{
				"id": "e171b885-c6c4-495b-881a-da34cae94fd5",
				"method": "GET"
			},
			{
				"id": "aaa32120-9733-4e03-9302-bebf23a982d1",
				"method": "GET"
			},
			{
				"id": "ee50cdd5-4434-473c-a567-a81e54f93de0",
				"method": "GET"
			},
			{
				"id": "a0479849-ef93-42b1-8b2b-2e137e8c6c8d",
				"method": "GET"
			},
			{
				"id": "7ab2f1cd-8995-4a3d-a571-9db8b01146bf",
				"method": "GET"
			},
			{
				"id": "97c2d0a9-1694-4919-b1e5-cdcd23978cf8",
				"method": "PATCH"
			},
			{
				"id": "fef0d388-48c4-4712-8c60-a70e52eb16db",
				"method": "POST"
			},
			{
				"id": "a18a614c-cc27-4781-9d31-051d1f13cfb3",
				"method": "POST"
			},
			{
				"id": "71f25df5-8ea5-4362-9c2b-87465ef373a4",
				"method": "POST"
			},
			{
				"id": "70c6fb98-1da7-491b-82ba-beeb308cf3a2",
				"method": "POST"
			},
			{
				"id": "9cee4f24-7430-422e-ae9b-de59f29bf0a4",
				"method": "POST"
			},
			{
				"id": "a947aa98-bbce-412c-ac02-1f8bd35a1113",
				"method": "POST"
			},
			{
				"id": "6559a39a-5cbe-421b-a29a-bad7d852a0ff",
				"method": "POST"
			},
			{
				"id": "b5c13093-88db-4abc-a4e7-b5ec7fb9da05",
				"method": "POST"
			},
			{
				"id": "09947076-288f-4f40-a883-be84abec9394",
				"method": "POST"
			},
			{
				"id": "d5714c58-1fcb-4e7e-80f2-e7833d96a066",
				"method": "POST"
			},
			{
				"id": "e58f8519-1d30-422f-83e7-e27458e0c49d",
				"method": "POST"
			},
			{
				"id": "8797972e-7629-4941-9cf2-a04d2178780b",
				"method": "POST"
			},
			{
				"id": "1e92ba16-a379-427b-9dc9-c9c58ab9ea96",
				"method": "POST"
			},
			{
				"id": "d60df551-b3f0-4b6a-a635-a8ed587758b1",
				"method": "POST"
			},
			{
				"id": "5c153529-3c40-4182-ae30-a682d9b26a50",
				"method": "POST"
			},
			{
				"id": "6a5cbe88-c382-45ce-919c-75df943aa077",
				"method": "POST"
			},
			{
				"id": "27b5e98a-85d7-4340-a376-b5f06389351b",
				"method": "PATCH"
			},
			{
				"id": "6c4b039e-590f-401c-9eae-73d41dd83fc6",
				"method": "PATCH"
			},
			{
				"id": "2ad517ed-4710-46fa-829a-c2fb71b84208",
				"method": "PATCH"
			},
			{
				"id": "0482ebbd-2499-47fb-8f3c-511edaf45119",
				"method": "PATCH"
			},
			{
				"id": "725a0ec0-22f0-4a59-91c3-c811362970d3",
				"method": "PATCH"
			},
			{
				"id": "819d59fe-817f-42d6-bf27-a51645b48114",
				"method": "PATCH"
			},
			{
				"id": "49caee51-f5df-41d8-ad64-297f9bef722a",
				"method": "PATCH"
			},
			{
				"id": "f721a060-f9c3-4833-8f79-8592c6d02945",
				"method": "PATCH"
			},
			{
				"id": "c1cce45d-b1c3-44c7-9758-2aeb5b98e476",
				"method": "PATCH"
			},
			{
				"id": "75c31062-431d-46b3-8a48-8a88ea257338",
				"method": "PATCH"
			},
			{
				"id": "4d12fc29-57c3-4821-a6ca-75c59d641f34",
				"method": "PATCH"
			},
			{
				"id": "62aa3890-1664-4180-aa9d-fd3202eb995d",
				"method": "PATCH"
			},
			{
				"id": "18fb31db-fb0b-40df-9141-04cc9ac4fe7c",
				"method": "PATCH"
			},
			{
				"id": "0df1bc9a-8b48-4ee7-ac72-c0e3de153496",
				"method": "PATCH"
			},
			{
				"id": "6caa6582-f2a3-4d1f-a289-f78748fdc724",
				"method": "POST"
			},
			{
				"id": "b11b6cf4-cd82-4309-ac80-cc3d95d89c86",
				"method": "POST"
			},
			{
				"id": "2eae08ab-d30d-45e5-a52e-f750389016cb",
				"method": "GET"
			},
			{
				"id": "9dc45314-ea7e-4947-afb3-f7e982d8c081",
				"method": "GET"
			},
			{
				"id": "21c44f38-1df0-4f44-909f-2aaee26d8338",
				"method": "GET"
			},
			{
				"id": "41aa96c5-f609-4384-9698-49d106fa0bfc",
				"method": "POST"
			},
			{
				"id": "281d537b-6ad2-4363-baa3-368c7de62efa",
				"method": "POST"
			},
			{
				"id": "116f137c-2a79-49dd-92be-d31f488a615c",
				"method": "POST"
			},
			{
				"id": "2317539c-9f66-47f2-b1cb-e7cccf9495ad",
				"method": "POST"
			},
			{
				"id": "6ed8a6bc-6779-4118-93a1-c0550e487d33",
				"method": "POST"
			},
			{
				"id": "6b9a9a79-2ff2-426e-b6a9-1029b577e4dd",
				"method": "GET"
			},
			{
				"id": "cbecb56a-f123-4106-bf36-290633f944d2",
				"method": "POST"
			},
			{
				"id": "cf138214-2100-42eb-8167-9cd00f376f33",
				"method": "POST"
			},
			{
				"id": "bde99a5f-8e0e-47ce-b170-41409cefb995",
				"method": "POST"
			},
			{
				"id": "8b4a282b-28e1-4095-8c92-bf9d8382262f",
				"method": "POST"
			},
			{
				"id": "c29ab72c-e74a-4560-b82c-659348f110b3",
				"method": "POST"
			},
			{
				"id": "e066bfd1-dcb6-4ddb-972f-a081a449a809",
				"method": "POST"
			},
			{
				"id": "fb9c3a60-ac94-4f59-8c72-82a32ecd2e64",
				"method": "POST"
			},
			{
				"id": "0b08167c-05e9-4e09-a642-6fda9eb685cd",
				"method": "GET"
			},
			{
				"id": "d8870800-32af-411d-a061-bf9456863261",
				"method": "GET"
			},
			{
				"id": "8284170f-d78a-4682-a989-a5b6111eb91d",
				"method": "GET"
			},
			{
				"id": "af31ceab-0d0d-4da2-87cc-57d39be0beb1",
				"method": "GET"
			},
			{
				"id": "ae2d6a6b-9bd2-40e2-bcc5-1e70fae106eb",
				"method": "DELETE"
			},
			{
				"id": "b60b4f33-9b82-43c1-b0b6-7452dca10e66",
				"method": "DELETE"
			},
			{
				"id": "42f73507-bc7c-49cf-8663-ecd33ec97bb5",
				"method": "DELETE"
			},
			{
				"id": "a26341e0-e1e4-43ee-9300-ebc5209a90bf",
				"method": "DELETE"
			},
			{
				"id": "044ccdb4-690e-4f6f-b10d-e2ebe7148891",
				"method": "DELETE"
			},
			{
				"id": "c180d413-8237-46a0-914b-caf2ff037f7f",
				"method": "DELETE"
			},
			{
				"id": "b2de765c-4ee9-4912-b539-c633ba129394",
				"method": "DELETE"
			},
			{
				"id": "2b827b5f-d1d6-42a8-8336-116f2d81c992",
				"method": "DELETE"
			},
			{
				"id": "6ca571fb-a490-4d62-8681-50a223e851e5",
				"method": "DELETE"
			},
			{
				"id": "27ccef4b-6928-47c0-bfb2-ff8d1f3c567f",
				"method": "DELETE"
			},
			{
				"id": "5f30bce5-d531-4a2c-acee-92d929ad9244",
				"method": "DELETE"
			},
			{
				"id": "820c1144-2b14-43f2-8184-ce66d9b5844d",
				"method": "DELETE"
			},
			{
				"id": "40608d8d-6115-46f6-a5ad-7c3ec2919f76",
				"method": "DELETE"
			},
			{
				"id": "c3f9cb9b-02c3-4e69-b00e-349188a0ce8c",
				"method": "DELETE"
			},
			{
				"id": "00518832-d932-47b6-8aac-4578678efb59",
				"method": "DELETE"
			},
			{
				"id": "7ecfb147-8103-4bdd-a01c-bf9de2203e25",
				"method": "DELETE"
			},
			{
				"id": "e3bd3cd9-37fd-4e04-8786-07fe2c770f91",
				"method": "DELETE"
			},
			{
				"id": "e19b348a-d5af-40ec-9ec8-c7e6456b1904",
				"method": "DELETE"
			},
			{
				"id": "ac174643-aa39-475c-890d-d7ef765cea6a",
				"method": "DELETE"
			},
			{
				"id": "88896a87-1b59-4c11-8b9f-a57d61ab3234",
				"method": "DELETE"
			},
			{
				"id": "412920c9-9e48-42fc-a289-26b25ddc82c7",
				"method": "DELETE"
			}
		]
	}
}